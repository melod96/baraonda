<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Admin">
	
	<select id="selectGeneralMemberCount" resultType="java.lang.Integer" parameterType="Search">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE 1 = 1
		AND ADMIN_RIGHT = 0 
		AND COMPANY_RIGHT = 0
		<if test="option1 != null and option1 != ''">
			<choose>
				<when test="option1 == 'general'">
					AND MEMBER_STATUS = 0
				</when>
				<when test="option1 == 'black'">
					AND MEMBER_STATUS = 1
				</when>
				<when test="option1 == 'secession'">
					AND MEMBER_STATUS = 2
				</when>
			</choose>
		</if>
		<if test="content != null and content != ''">
			AND (ID LIKE '%' || #{content} || '%' 
			OR NAME LIKE '%' || #{content} || '%' 
			OR NICK_NAME LIKE '%' || #{content} || '%')
		</if>
	</select>
	
	<select id="selectGeneralMemberList" resultType="map" parameterType="Search">
		SELECT MEMBER_NO, ID, NAME, NICK_NAME, PHONE, EMAIL, ENROLL_DATE, MEMBER_STATUS
		FROM MEMBER
		WHERE 1 = 1
		AND ADMIN_RIGHT = 0 
		AND COMPANY_RIGHT = 0
		<if test="option1 != null and option1 != ''">
			<choose>
				<when test="option1 == 'general'">
					AND MEMBER_STATUS = 0
				</when>
				<when test="option1 == 'black'">
					AND MEMBER_STATUS = 1
				</when>
				<when test="option1 == 'secession'">
					AND MEMBER_STATUS = 2
				</when>
			</choose>
		</if>
		<if test="content != null and content != ''">
			AND (ID LIKE '%' || #{content} || '%' 
			OR NAME LIKE '%' || #{content} || '%' 
			OR NICK_NAME LIKE '%' || #{content} || '%')
		</if>
	</select>
	
	<select id="selectCompanyMemberCount" resultType="java.lang.Integer" parameterType="Search">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE 1 = 1
		AND ADMIN_RIGHT = 0 
		AND COMPANY_RIGHT = 1
		<if test="content != null and content != ''">
			AND (ID LIKE '%' || #{content} || '%' 
			OR NAME LIKE '%' || #{content} || '%' 
			OR NICK_NAME LIKE '%' || #{content} || '%')
		</if>
	</select>
	
	<select id="selectCompanyMemberList" resultType="map" parameterType="Search">
		SELECT MEMBER_NO, ID, NAME, NICK_NAME, PHONE, EMAIL, COMPANY_NAME, COMPANY_NO, BANK, ACCOUNT, CEO_NAME, ENROLL_DATE, MEMBER_STATUS
		FROM MEMBER
		WHERE 1 = 1
		AND ADMIN_RIGHT = 0 
		AND COMPANY_RIGHT = 1
		<if test="content != null and content != ''">
			AND (ID LIKE '%' || #{content} || '%' 
			OR NAME LIKE '%' || #{content} || '%' 
			OR NICK_NAME LIKE '%' || #{content} || '%')
		</if>
	</select>
	
	<select id="selectBlackMemberCount" resultType="java.lang.Integer" parameterType="Search">
		SELECT COUNT(*)
			FROM (SELECT MEMBER_NO, ID, NAME, NICK_NAME, PHONE, ENROLL_DATE, BLACK_DATE, LIFT_DATE, COUNT(REPORT_GET_NO) AS DECLARATIONCOUNT
				FROM (SELECT M.MEMBER_NO, M.ID, M.NAME, M.NICK_NAME, M.PHONE, M.ENROLL_DATE, B.BLACK_DATE, B.LIFT_DATE, R.REPORT_GET_NO
	      			  FROM MEMBER M
	      			  LEFT JOIN REPORT R ON(M.MEMBER_NO = R.REPORT_GET_NO)
	      			  JOIN BLACKLIST B ON(M.MEMBER_NO = B.MEMBER_NO)
	      			  WHERE 1 = 1 
          			  AND MEMBER_STATUS = 1)
			WHERE 1 = 1
	     	<if test="content != null and content != ''">
				AND (ID LIKE '%' || #{content} || '%' 
				OR NAME LIKE '%' || #{content} || '%' 
				OR NICK_NAME LIKE '%' || #{content} || '%')
			</if>
			GROUP BY MEMBER_NO, ID, NAME, NICK_NAME, PHONE, ENROLL_DATE, BLACK_DATE, LIFT_DATE)
	</select>
	
	<select id="selectBlakcMemberList" parameterType="Search" resultType="map">
		SELECT MEMBER_NO, ID, NAME, NICK_NAME, PHONE, ENROLL_DATE, BLACK_DATE, LIFT_DATE, COUNT(REPORT_GET_NO) AS DECLARATIONCOUNT
			FROM (SELECT M.MEMBER_NO, M.ID, M.NAME, M.NICK_NAME, M.PHONE, M.ENROLL_DATE, B.BLACK_DATE, B.LIFT_DATE, R.REPORT_GET_NO
      			  FROM MEMBER M
      			  LEFT JOIN REPORT R ON(M.MEMBER_NO = R.REPORT_GET_NO)
      			  JOIN BLACKLIST B ON(M.MEMBER_NO = B.MEMBER_NO)
      			  WHERE 1 = 1 
          		  AND MEMBER_STATUS = 1)
		WHERE 1 = 1
		<if test="content != null and content != ''">
			AND (ID LIKE '%' || #{content} || '%' 
			OR NAME LIKE '%' || #{content} || '%' 
			OR NICK_NAME LIKE '%' || #{content} || '%')
		</if>
		GROUP BY MEMBER_NO, ID, NAME, NICK_NAME, PHONE, ENROLL_DATE, BLACK_DATE, LIFT_DATE
	</select>
	
	<select id="selectNoticeCount" resultType="java.lang.Integer" parameterType="Search">
		SELECT COUNT(*)
		FROM BOARD B
		JOIN MEMBER M ON(B.MEMBER_NO = M.MEMBER_NO)
		WHERE 1 = 1
		AND BOARD_TYPE = 6
		AND BOARD_STATUS = 0
	    <if test="content != null and content != ''">
			AND (BOARD_TITLE LIKE '%' || #{content} || '%' 
			OR NICK_NAME LIKE '%' || #{content} || '%')
		</if>
	</select>
	
	<select id="selectNoticeList" resultType="map" parameterType="Search">
		SELECT B.BOARD_NO, B.BOARD_TITLE, M.NICK_NAME, B.BOARD_COUNT, B.BOARD_DATE
		FROM BOARD B
		JOIN MEMBER M ON(B.MEMBER_NO = M.MEMBER_NO)
		WHERE 1 = 1
		AND BOARD_TYPE = 6
		AND BOARD_STATUS = 0
	    <if test="content != null and content != ''">
			AND (BOARD_TITLE LIKE '%' || #{content} || '%' 
			OR NICK_NAME LIKE '%' || #{content} || '%')
		</if>
	</select>
	
	<select id="selectDeclarationCount" resultType="java.lang.Integer" parameterType="Search">
		SELECT COUNT(*)
		FROM REPORT R 
		JOIN MEMBER M1 ON(R.REPORT_GIVE_NO = M1.MEMBER_NO)
		JOIN MEMBER M2 ON(R.REPORT_GET_NO = M2.MEMBER_NO)
		WHERE 1 = 1
	    <if test="content != null and content != ''">
			AND (GIVE_NICK_NAME LIKE '%' || #{content} || '%' 
			OR GET_NICK_NAME LIKE '%' || #{content} || '%')
		</if>
	</select>
	
	<select id="selectDeclarationList" resultType="map" parameterType="Search">
		SELECT R.REPORT_NO, R.REPORT_TYPE, M1.NICK_NAME AS GIVE_NICK_NAME, M2.NICK_NAME AS GET_NICK_NAME, R.REPORT_DATE, R.REPORT_APPROVAL
		FROM REPORT R 
		JOIN MEMBER M1 ON(R.REPORT_GIVE_NO = M1.MEMBER_NO)
		JOIN MEMBER M2 ON(R.REPORT_GET_NO = M2.MEMBER_NO)
		WHERE 1 = 1
	    <if test="content != null and content != ''">
			AND (GIVE_NICK_NAME LIKE '%' || #{content} || '%' 
			OR GET_NICK_NAME LIKE '%' || #{content} || '%')
		</if>
	</select>
	
	<select id="selectOrderCount" resultType="java.lang.Integer" parameterType="Search">
		SELECT COUNT(*)
		FROM ORDERS O
		JOIN MEMBER M ON(O.MEMBER_NO = M.MEMBER_NO)
		JOIN PRODUCT P ON(O.PRODUCT_NO = P.PRODUCT_NO)
		WHERE 1 = 1 
		AND PRODUCT_TYPE = 1
	    <if test="content != null and content != ''">
			AND (NAME LIKE '%' || #{content} || '%' 
			OR PRODUCT_NAME LIKE '%' || #{content} || '%' 
			OR PHONE LIKE '%' || #{content} || '%')
		</if>
	</select>
	
	<select id="selectOrderList" resultType="map" parameterType="Search">
		SELECT O.ORDERS_NO, M.NAME, P.PRODUCT_NAME, O.PRODUCT_QUANTITY, O.ORDERS_DATE, M.PHONE
		FROM ORDERS O
		JOIN MEMBER M ON(O.MEMBER_NO = M.MEMBER_NO)
		JOIN PRODUCT P ON(O.PRODUCT_NO = P.PRODUCT_NO)
		WHERE 1 = 1 
		AND PRODUCT_TYPE = 1
	    <if test="content != null and content != ''">
			AND (NAME LIKE '%' || #{content} || '%' 
			OR PRODUCT_NAME LIKE '%' || #{content} || '%' 
			OR PHONE LIKE '%' || #{content} || '%')
		</if>
	</select>
	
	<select id="selectGeneralMemberInfo" resultType="map" parameterType="java.lang.String">
		SELECT MEMBER_NO, ID, NAME, NICK_NAME, PHONE, EMAIL, ENROLL_DATE, MEMBER_STATUS
		FROM MEMBER 
		WHERE 1 = 1
		AND MEMBER_NO = #{num}
	</select>
	
	<select id="selectMembersDeclarationList" resultType="map" parameterType="java.lang.String">
		SELECT R.REPORT_NO, R.REPORT_TYPE, M.NICK_NAME AS GIVE_NICK_NAME, R.REPORT_DATE
		FROM REPORT R
		JOIN MEMBER M ON(M.MEMBER_NO = R.REPORT_GIVE_NO)
		WHERE 1 = 1
		AND REPORT_GET_NO = #{num}
	</select>
	
	<select id="selectMembersOrderList" resultType="map" parameterType="java.lang.String">
		SELECT O.ORDERS_NO, P.PRODUCT_NAME, O.PRODUCT_QUANTITY, O.ORDERS_DATE
		FROM ORDERS O 
		JOIN PRODUCT P ON(O.PRODUCT_NO = P.PRODUCT_NO)
		WHERE 1 = 1
		AND MEMBER_NO = #{num}
	</select>
	
	<select id="selectCompanyMemberInfo" resultType="map" parameterType="java.lang.String">
		SELECT MEMBER_NO, ID, NAME, NICK_NAME, PHONE, EMAIL, COMPANY_NAME, COMPANY_NO, BANK, ACCOUNT, CEO_NAME, CEO_TYPE, ENROLL_DATE
		FROM MEMBER 
		WHERE 1 = 1
		AND MEMBER_NO = #{num}
	</select>
	
	<resultMap type="HashMap" id="NoticeInfo">
		<result property="BOARD_NO" column="BOARD_NO"/>
		<result property="BOARD_TITLE" column="BOARD_TITLE"/>
		<result property="BOARD_CONTENT" column="BOARD_CONTENT" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="BOARD_DATE" column="BOARD_DATE"/>
		<result property="NICK_NAME" column="NICK_NAME"/>
	</resultMap>
	
	<select id="selectNoticeInfo" resultMap="NoticeInfo" parameterType="java.lang.String">
		SELECT B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTENT, B.BOARD_DATE, M.NICK_NAME
		FROM BOARD B 
		JOIN MEMBER M ON(B.MEMBER_NO = M.MEMBER_NO)
		WHERE 1 = 1
		AND BOARD_TYPE = 6
		AND BOARD_NO = #{num}
	</select>

	<insert id="insertNoticeInfo" parameterType="AdminBoard">
		INSERT INTO BOARD(BOARD_NO, BOARD_TYPE, BOARD_TITLE, BOARD_CONTENT, MEMBER_NO, BOARD_DATE, MODIFY_DATE, BOARD_STATUS, BOARD_COUNT)
		VALUES(SEQ_BOARD_NO.NEXTVAL, 6, #{title}, #{content}, 1, SYSDATE, SYSDATE, 0, 0)
	</insert>

	<update id="updateNoticeInfo" parameterType="AdminBoard">
		UPDATE BOARD
		SET BOARD_TITLE = #{title}, BOARD_CONTENT = #{content}, MODIFY_DATE = SYSDATE, BOARD_COUNT = 0
		WHERE BOARD_NO = #{board_no}
	</update>
	
	<update id="deleteNoticeInfo" parameterType="java.lang.String">
		UPDATE BOARD
		SET BOARD_STATUS = 1
		WHERE BOARD_NO = #{num}
	</update>
	
	<resultMap type="HashMap" id="DeclarationInfo">
		<result property="REPORT_NO" column="REPORT_NO"/>
		<result property="GIVE_NICK_NAME" column="GIVE_NICK_NAME"/>
		<result property="GET_NICK_NAME" column="GET_NICK_NAME"/>
		<result property="REPORT_GIVE_NO" column="REPORT_GIVE_NO"/>
		<result property="REPORT_GET_NO" column="REPORT_GET_NO"/>
		<result property="GIVE_PHONE" column="GIVE_PHONE"/>
		<result property="GET_PHONE" column="GET_PHONE"/>
		<result property="REPORT_TYPE" column="REPORT_TYPE"/>
		<result property="REPORT_DATE" column="REPORT_DATE"/>
		<result property="REPORT_APPROVAL" column="REPORT_APPROVAL"/>
		<result property="REPORT_CONTENT" column="REPORT_CONTENT" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="BOARD_CONTENT" column="BOARD_CONTENT" jdbcType="CLOB" javaType="java.lang.String"/>
	</resultMap>
	
	<select id="selectDeclarationInfo" resultMap="DeclarationInfo" parameterType="java.lang.String">
		SELECT R.REPORT_NO, M1.NICK_NAME AS GIVE_NICK_NAME, M2.NICK_NAME AS GET_NICK_NAME, R.REPORT_GIVE_NO, R.REPORT_GET_NO,
		        M1.PHONE AS GIVE_PHONE, M2.PHONE AS GET_PHONE, R.REPORT_TYPE, R.REPORT_DATE, 
		        R.REPORT_APPROVAL, R.REPORT_CONTENT, B.BOARD_CONTENT
		FROM REPORT R
		JOIN MEMBER M1 ON(R.REPORT_GIVE_NO = M1.MEMBER_NO)
		JOIN MEMBER M2 ON(R.REPORT_GET_NO = M2.MEMBER_NO)
		JOIN BOARD B ON(R.BOARD_NO = B.BOARD_NO)
		WHERE 1 = 1
		AND REPORT_NO = #{num}
	</select>

	<insert id="insertBlackMemberAdmin" parameterType="java.lang.String">
		INSERT INTO BLACKLIST(BLACK_NO, MEMBER_NO, BLACK_DATE, LIFT_DATE)
		VALUES(SEQ_BLACK_NO.NEXTVAL, #{num}, SYSDATE, SYSDATE + 7)
	</insert>
	
	<update id="updateMemberStatusAdmin" parameterType="java.lang.String">
		UPDATE MEMBER 
		SET MEMBER_STATUS = 1
		WHERE 1 = 1
		AND MEMBER_NO = #{num}
	</update>
	
	<update id="updateReportApprovalAdmin" parameterType="java.lang.String">
		UPDATE REPORT 
		SET REPORT_APPROVAL = 1 
		WHERE 1 = 1
		AND REPORT_GET_NO = #{num}
	</update>
	
	<select id="selectOrderInfo" parameterType="java.lang.String" resultType="map">
		SELECT O.ORDERS_NO, M.NAME, M.PHONE, P.PRODUCT_NAME, O.PRODUCT_QUANTITY, O.ORDERS_DATE, CASE WHEN P.PRODUCT_PRICE = 0 THEN P.POINT_STEP END AS PRODUCT_PRICE, P.PRODUCT_NO
		FROM ORDERS O 
		JOIN MEMBER M ON(O.MEMBER_NO = M.MEMBER_NO)
		JOIN PRODUCT P ON(O.PRODUCT_NO = P.PRODUCT_NO)
		WHERE 1 = 1 
		AND ORDERS_NO = #{num}
	</select>
	
	<select id="selectProductInfoForGraph" parameterType="java.lang.String" resultType="map">
		SELECT
		    PRODUCT_NO, 
		    SUM("N1") AS N1, SUM("N2") AS N2, SUM("N3") AS N3, SUM("N4") AS N4, SUM("N5") AS N5
		FROM(
		        SELECT PRODUCT_NO, TO_CHAR(ORDERS_DATE,'YYYY') AS YYYY, TO_CHAR(ORDERS_DATE,'MM') AS MM
		        , DECODE(TO_CHAR(ORDERS_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 4, 1, 0) AS "N1"
		        , DECODE(TO_CHAR(ORDERS_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 3, 1, 0) AS "N2"
		        , DECODE(TO_CHAR(ORDERS_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 2, 1, 0) AS "N3"
		        , DECODE(TO_CHAR(ORDERS_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 1, 1, 0) AS "N4"
		        , DECODE(TO_CHAR(ORDERS_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 0, 1, 0) AS "N5"
		        FROM ORDERS
		        WHERE 1 = 1
		        AND PRODUCT_NO = #{num}
		)GROUP BY PRODUCT_NO
	</select>
	
	<select id="selectMemberInfoForDashboard" resultType="map">
		SELECT 
		    SUM("GENERAL") AS GENERAL, SUM("BLACK") AS BLACK, SUM("LEAVE") AS LEAVE
		FROM(
		    SELECT  DECODE(MEMBER_STATUS, 0, 1, 0) AS "GENERAL"
			, DECODE(MEMBER_STATUS, 1, 1, 0) AS "BLACK"
			, DECODE(MEMBER_STATUS, 2, 1, 0) AS "LEAVE"
			FROM MEMBER
		)
	</select>
	
	<select id="selectDashboardInfo" resultType="map">
		SELECT (SELECT COUNT(*) FROM MEMBER WHERE TO_CHAR(ENROLL_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD') AND MEMBER_STATUS = 0) AS MEMBER
		     , (SELECT COUNT(*) FROM ORDERS WHERE TO_CHAR(ORDERS_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD')) AS ORDERS
		     , (SELECT COUNT(*) FROM BOARD WHERE TO_CHAR(BOARD_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD') AND BOARD_TYPE = 4 AND WRITING_TYPE BETWEEN 11 AND 18) AS BOARD
		     , (SELECT COUNT(*) FROM BOARD WHERE TO_CHAR(BOARD_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD') AND BOARD_TYPE = 4 AND WRITING_TYPE = 19) AS QNA
		FROM DUAL
	</select>
	
	<select id="selectBoardInfo" resultType="map">
		SELECT
		    BOARD_TYPE, WRITING_TYPE,
		    SUM("N1") AS N1, SUM("N2") AS N2, SUM("N3") AS N3, SUM("N4") AS N4, SUM("N5") AS N5,
            SUM("N6") AS N6, SUM("N7") AS N7, SUM("N8") AS N8, SUM("N9") AS N9, SUM("N10") AS N10
		FROM(
		        SELECT BOARD_TYPE, WRITING_TYPE, TO_CHAR(BOARD_DATE,'YYYY') AS YYYY, TO_CHAR(BOARD_DATE,'MM') AS MM
                , DECODE(TO_CHAR(BOARD_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 9, 1, 0) AS "N1"
                , DECODE(TO_CHAR(BOARD_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 8, 1, 0) AS "N2"
                , DECODE(TO_CHAR(BOARD_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 7, 1, 0) AS "N3"
                , DECODE(TO_CHAR(BOARD_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 6, 1, 0) AS "N4"
                , DECODE(TO_CHAR(BOARD_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 5, 1, 0) AS "N5"
		        , DECODE(TO_CHAR(BOARD_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 4, 1, 0) AS "N6"
		        , DECODE(TO_CHAR(BOARD_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 3, 1, 0) AS "N7"
		        , DECODE(TO_CHAR(BOARD_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 2, 1, 0) AS "N8"
		        , DECODE(TO_CHAR(BOARD_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 1, 1, 0) AS "N9"
		        , DECODE(TO_CHAR(BOARD_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 0, 1, 0) AS "N10"
		        FROM BOARD
		        WHERE 1 = 1
		        AND BOARD_TYPE = 4
		)GROUP BY BOARD_TYPE, WRITING_TYPE
		ORDER BY WRITING_TYPE
	</select>
	
	<select id="selectProductInfo" resultType="map">
		SELECT P.PRODUCT_NAME, COUNT(O.PRODUCT_NO) AS CO 
		FROM ORDERS O
		JOIN PRODUCT P ON(O.PRODUCT_NO = P.PRODUCT_NO)
		WHERE PRODUCT_TYPE = 1
		GROUP BY P.PRODUCT_NAME 
		ORDER BY CO DESC
	</select>
	
	<select id="selectOrderInfoP" resultType="map">
		SELECT  
            YYYY,
		    SUM("N1") AS N1, SUM("N2") AS N2, SUM("N3") AS N3, SUM("N4") AS N4, SUM("N5") AS N5,
            SUM("N6") AS N6, SUM("N7") AS N7, SUM("N8") AS N8, SUM("N9") AS N9, SUM("N10") AS N10
		FROM(
		        SELECT ORDERS_NO, TO_CHAR(ORDERS_DATE,'YYYY') AS YYYY, TO_CHAR(ORDERS_DATE,'MM') AS MM
                , DECODE(TO_CHAR(ORDERS_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 9, 1, 0) AS "N1"
                , DECODE(TO_CHAR(ORDERS_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 8, 1, 0) AS "N2"
                , DECODE(TO_CHAR(ORDERS_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 7, 1, 0) AS "N3"
                , DECODE(TO_CHAR(ORDERS_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 6, 1, 0) AS "N4"
                , DECODE(TO_CHAR(ORDERS_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 5, 1, 0) AS "N5"
		        , DECODE(TO_CHAR(ORDERS_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 4, 1, 0) AS "N6"
		        , DECODE(TO_CHAR(ORDERS_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 3, 1, 0) AS "N7"
		        , DECODE(TO_CHAR(ORDERS_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 2, 1, 0) AS "N8"
		        , DECODE(TO_CHAR(ORDERS_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 1, 1, 0) AS "N9"
		        , DECODE(TO_CHAR(ORDERS_DATE,'YYYYMM'), TO_CHAR(SYSDATE, 'YYYYMM') - 0, 1, 0) AS "N10"
		        FROM ORDERS
		)GROUP BY YYYY
	</select>
	
	<select id="selectExperienceCount" resultType="java.lang.Integer" parameterType="Search">
		SELECT COUNT(*)
		FROM EXPERIENCE E
		JOIN BOARD B ON(E.BOARD_NO = B.BOARD_NO)
		JOIN MEMBER M ON(E.COMPANY_NO = M.MEMBER_NO)
		WHERE 1 = 1
		AND B.BOARD_TYPE = 5
		AND WRITING_TYPE = 16
		<if test="content != null and content != ''">
			AND (BOARD_TITLE LIKE '%' || #{content} || '%' 
			OR COMPANY_NAME LIKE '%' || #{content} || '%' )
		</if>
	</select>
	
	<select id="selectExperienceList" parameterType="Search" resultType="map">
		SELECT E.EXPERIENCE_NO, B.BOARD_TITLE, M.COMPANY_NAME, E.EXPERIENCE_DATE, E.EXPERIENCE_APPROVAL, E.APPROVAL_DATE
		FROM EXPERIENCE E
		JOIN BOARD B ON(E.BOARD_NO = B.BOARD_NO)
		JOIN MEMBER M ON(E.COMPANY_NO = M.MEMBER_NO)
		WHERE 1 = 1
		AND B.BOARD_TYPE = 5
		AND WRITING_TYPE = 16
		<if test="content != null and content != ''">
			AND (BOARD_TITLE LIKE '%' || #{content} || '%' 
			OR COMPANY_NAME LIKE '%' || #{content} || '%' )
		</if>
	</select>

	<resultMap type="HashMap" id="ExperienceInfo">
		<result property="EXPERIENCE_NO" column="EXPERIENCE_NO"/>
		<result property="BOARD_TITLE" column="BOARD_TITLE"/>
		<result property="BOARD_CONTENT" column="BOARD_CONTENT" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="CEO_NAME" column="CEO_NAME"/>
		<result property="EXPERIENCE_APPROVAL" column="EXPERIENCE_APPROVAL"/>
		<result property="APPROVAL_CONTENT" column="APPROVAL_CONTENT" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="APPROVAL_DATE" column="APPROVAL_DATE"/>
		<result property="BOARD_DATE" column="BOARD_DATE"/>
	</resultMap>

	<select id="selectExperienceInfo" parameterType="java.lang.String" resultMap="ExperienceInfo">
		SELECT E.EXPERIENCE_NO, B.BOARD_TITLE, B.BOARD_CONTENT, M.CEO_NAME, E.EXPERIENCE_APPROVAL, E.APPROVAL_CONTENT, E.APPROVAL_DATE, B.BOARD_DATE
		FROM EXPERIENCE E 
		JOIN MEMBER M ON(E.COMPANY_NO = M.MEMBER_NO)
		JOIN BOARD B ON(E.BOARD_NO = B.BOARD_NO)
		WHERE 1 = 1
		AND EXPERIENCE_NO = #{num}
	</select>
	
	<update id="updateExperienceInfo" parameterType="AdminBoard">
		UPDATE EXPERIENCE
		SET EXPERIENCE_APPROVAL = 1, APPROVAL_CONTENT = #{content}, APPROVAL_DATE = SYSDATE
		WHERE 1 = 1
		AND EXPERIENCE_NO = #{board_no}
	</update>
	
	
</mapper> 
  