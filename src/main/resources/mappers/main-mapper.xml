<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="Main">
 	<!-- 공지사항 조회용 -->
 	<resultMap type="com.kh.baraonda.notice.model.vo.Notice" id="noticeResultSet">
		<!--property부분은 Member클래스에 있는 필드와 같아야 하고, column은 DB의 컬럼명과 같다.-->
		<!--setter를 통해 자동으로 값을 넣기 때문에 해당 class에 setter가 생성되어 있어야 한다.-->
		<!--mid가 result가 아닌 id인 이유는 식별자로 사용되기 때문이다.-->
		<id property="board_no" column="BOARD_NO"/>
		<result property="board_type" column="BOARD_TYPE"/>
		<result property="writing_type" column="WRITING_TYPE"/>
		<result property="board_title" column="BOARD_TITLE"/>
		<result property="board_content" column="BOARD_CONTENT"/>
		<result property="member_no" column="MEMBER_NO"/>
		<result property="board_date" column="BOARD_DATE"/>
		<result property="modify_date" column="MODIFY_DATE"/>
		<result property="board_status" column="BOARD_STATUS"/>
		<result property="board_count" column="BOARD_COUNT"/>
	</resultMap>
	<!-- 고객문의 조회용 -->
 	<resultMap type="com.kh.baraonda.board.model.vo.Board" id="questionResultSet">
		<!--property부분은 Member클래스에 있는 필드와 같아야 하고, column은 DB의 컬럼명과 같다.-->
		<!--setter를 통해 자동으로 값을 넣기 때문에 해당 class에 setter가 생성되어 있어야 한다.-->
		<!--mid가 result가 아닌 id인 이유는 식별자로 사용되기 때문이다.-->
		<id property="board_no" column="BOARD_NO"/>
		<result property="board_type" column="BOARD_TYPE"/>
		<result property="writing_type" column="WRITING_TYPE"/>
		<result property="board_title" column="BOARD_TITLE"/>
		<result property="board_content" column="BOARD_CONTENT"/>
		<result property="member_no" column="MEMBER_NO"/>
		<result property="board_date" column="BOARD_DATE"/>
		<result property="modify_date" column="MODIFY_DATE"/>
		<result property="board_status" column="BOARD_STATUS"/>
		<result property="board_count" column="BOARD_COUNT"/>
	</resultMap>
	
	<!-- 다이어터랭킹 조회용(프로필사진 추가해야함) -->
 	<resultMap type="com.kh.baraonda.main.model.vo.Ranking" id="rankingResultSet">
	<result property="member_no" column="MEMBER_NO"/>
	<result property="nick_name" column="NICK_NAME"/>
	<result property="member_status" column="MEMBER_STATUS"/>
	<result property="point_no" column="POINT_NO"/>
	<result property="accrue_point" column="ACCRUE_POINT"/>
	<result property="self_introduction" column="SELF_INTRODUCTION"/>
	
	<result property="files_no" column="FILES_NO"/>
	<result property="f_reference_no" column="F_REFERENCE_NO"/>
	<result property="files_title" column="FILES_TITLE"/>
	<result property="files_change_title" column="FILES_CHANGE_TITLE"/>
	<result property="files_type" column="FILES_TYPE"/>
	<result property="files_root" column="FILES_ROOT"/>
	<result property="files_ssecession" column="FILES_SSECESSION"/>
	<result property="profile_root" column="PROFILE_ROOT"/>
	
	</resultMap>
	
	<!-- 명예의 전당 조회용 -->
 	<resultMap type="com.kh.baraonda.main.model.vo.Fame" id="fameResultSet">
	<result property="board_no" column="BOARD_NO"/>
	<result property="board_title" column="BOARD_TITLE"/>
	<result property="member_no" column="MEMBER_NO"/>
	<result property="marking_type" column="MARKING_TYPE"/>
	</resultMap>
	
	<!-- 비포에프터 조회용 -->
 	<resultMap type="com.kh.baraonda.tips.model.vo.Tips" id="tipsResultSet">
		<result property="board_type" column="BOARD_TYPE"/>
		<result property="writing_type" column="WRITING_TYPE"/>
		<result property="board_title" column="BOARD_TITLE"/>
		<result property="board_content" column="BOARD_CONTENT"/>
		<result property="member_no" column="MEMBER_NO"/>
		<result property="board_date" column="BOARD_DATE"/>
		<result property="modify_date" column="MODIFY_DATE"/>
		<result property="board_status" column="BOARD_STATUS"/>
		<result property="board_count" column="BOARD_COUNT"/>
		<result property="nick_name" column="NICK_NAME"/>
		<result property="marking_type" column="MARKING_TYPE"/>
		<result property="board_good" column="BOARD_GOOD"/>
		<result property="files_no" column="FILES_NO"/>
		<result property="f_reference_no" column="F_REFERENCE_NO"/>
		<result property="files_title" column="FILES_TITLE"/>
		<result property="files_change_title" column="FILES_CHANGE_TITLE"/>
		<result property="files_type" column="FILES_TYPE"/>
		<result property="files_root" column="FILES_ROOT"/>
		<result property="files_secession" column="FILES_SECESSION"/>
		<result property="profile_root" column="PROFILE_ROOT"/>
	</resultMap>
	
	
	<!-- 공지사항 목록 조회용 쿼리문 -->
	<select id="selectNotice" resultMap="noticeResultSet" parameterType="Notice">
		SELECT RANK, BOARD_TITLE, board_no
		
		FROM(
				SELECT RANK() OVER (ORDER BY BOARD_DATE DESC) AS RANK, 
				BOARD_TITLE, board_no FROM BOARD WHERE BOARD_TYPE = 6 AND BOARD_STATUS = 0
			)
			
		WHERE RANK BETWEEN 1 AND 5
		
	</select>
	
		<!-- 고객문의 목록 조회용 쿼리문 -->
	<select id="selectQuestion" resultMap="questionResultSet" parameterType="Board">
		SELECT RANK, BOARD_TITLE
		
		FROM(
				SELECT RANK() OVER (ORDER BY BOARD_DATE DESC) AS RANK, 
				BOARD_TITLE FROM BOARD WHERE BOARD_TYPE = 7 AND BOARD_STATUS = 0
			)
			
		WHERE RANK BETWEEN 1 AND 5
		
	</select>
	
			<!-- 다이어터랭킹 목록 조회용 쿼리문(프로필사진 미추가) -->
	<select id="selectRanking" resultMap="rankingResultSet" parameterType="Ranking">
		  SELECT RANK, NICK_NAME, files_root, accrue_point, member_no
		FROM(
				SELECT RANK() OVER (ORDER BY ACCRUE_POINT DESC) AS RANK,
				NICK_NAME, files_root, accrue_point, member_no FROM MEMBER M JOIN POINT P ON(M.MEMBER_NO = P.POINT_NO)
                join files f on (m.member_no = f.f_reference_no)
                WHERE MEMBER_STATUS = 0 and files_type = 1
			) 
		WHERE RANK BETWEEN 1 AND 5
	</select>
	
	<!-- 명예의전당 목록 조회용 쿼리문 -->
	<select id="selectFame" resultMap="fameResultSet" parameterType="Fame">
		select board_title, count(m.board_no) from marking m
		join board b on(b.board_no = m.board_no)
		where marking_type=2
		group by board_title,m.board_no
		order by m.board_no
		</select>
		
	<!-- 비포에프터 목록 조회용 쿼리문 -->
	<select id="selectTips" resultMap="tipsResultSet" parameterType="Tips">
		SELECT T.BOARD_TITLE, T.BOARD_DATE, T.BOARD_COUNT,T.board_good,T.NICK_NAME, T.FILES_ROOT, T.BOARD_NO,MEMBER_NO ,FF.FILES_ROOT as "PROFILE_ROOT"
        FROM (     
            select b.board_title, b.board_date, b.board_count, count(m.board_no) board_good, 
                   me.nick_name, f.files_root, b.board_no,ME.MEMBER_NO
            from board b
            join member me on (b.member_no = me.member_no)
            join marking m on (b.board_no = m.board_no)
            join files f on (b.board_no = f.f_reference_no)
            where marking_type = 2 and board_status = 0 and FILES_SECESSION = 0 and FILES_TYPE = 4 and WRITING_TYPE = 11
            group by b.board_title, m.board_no, b.board_title, b.board_date, b.board_count, me.nick_name, f.files_root, b.board_no,ME.MEMBER_NO
            order by board_good desc
            ) T
        JOIN FILES FF ON ( FF.F_REFERENCE_NO = T.MEMBER_NO ) 
        AND FF.FILES_SECESSION = 0
        AND FF.FILES_TYPE = 1
	
		</select>
		
		<!-- 베스트 다이어터 조회용 쿼리문 -->
	<select id="selectBest" resultMap="rankingResultSet" parameterType="Ranking">
		SELECT RANK, NICK_NAME, files_root, SELF_INTRODUCTION, member_no
		FROM(
				SELECT RANK() OVER (ORDER BY ACCRUE_POINT DESC) AS RANK,
				NICK_NAME, files_root, self_introduction, member_no FROM MEMBER M JOIN POINT P ON(M.MEMBER_NO = P.POINT_NO)
                join files f on (m.member_no = f.f_reference_no)
                WHERE MEMBER_STATUS = 0 and files_type = 1
			) 
		WHERE RANK BETWEEN 1 AND 1
	</select>
		
	
	</mapper>